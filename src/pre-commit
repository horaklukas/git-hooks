#!/usr/bin/env node

/*
 This pre-commit hook looks for `fdescribe`, `fit`, debugger in the
 staged files and exits with an error code of 1 if there are such changes.

 inspired by https://gist.github.com/DerLobi/d938ac7dc422145f85e6
*/

var child_process = require('child_process');
var execSync = child_process.execSync;
var path = require('path');

// looks like "+++ b/filename.js"
var changedFilenameRegexp = /\s\+\+\+\s(.*)\s/;

var diffFilesSeparator = /\sdiff --git (.*)\s/;

var patterns = {
  fdescribe: /\s\+\s*fdescribe\(/,
  fit: /\s\+\s*fit\(/,
  debugger: /\s\+\s*debugger/
};
var tests = Object.keys(patterns);

var diffCommandByVcsType = {
  'git': 'git diff --staged',
  'hg': 'hg diff --git'
};

function getFilesContaining(pattern) {
  var files,
    filesDiff;

  filesDiff = getFilesDiff();

  if(filesDiff && containPattern(pattern, filesDiff)) {
    var parts = filesDiff.split(diffFilesSeparator);

    files = parts
      .filter(containPattern.bind(null, pattern))
      .map(extractChangeFileName)
      .filter(isNotNull);
  }

  return files || [];
}

function getFilesDiff() {
  var diffCmd,
    vcsType;

  vcsType = getVcsType();
  diffCmd = vcsType && diffCommandByVcsType[vcsType];

  return diffCmd ? execSync(diffCmd).toString() : '';
}

function getVcsType() {
  // TODO: better way to determine type of repository
  if(__dirname.indexOf('.git') > -1) {
    return 'git';
  } else if (__dirname.indexOf('.hg')) {
    return 'hg';
  }

  return null;
}

function containPattern(pattern, content) {
  return pattern.test(content);
}

function extractChangeFileName(fileRow) {
  var filename = changedFilenameRegexp.exec(fileRow);

  return filename && filename[1] ? path.basename(filename[1]) : null;
}

function isNotNull(item) {
  return item != null;
}

tests.forEach(function(testName) {
  var files;

  files = getFilesContaining(patterns[testName]);

  if (files.length) {
    /* eslint-disable no-console */
    console.error('You forgot to remove a ' + testName + ' in the following files:');
    console.error(files.join('\n'));
    console.error('');
    /* eslint-enable no-console */
    process.exit(1);
  }
});

process.exit(0);